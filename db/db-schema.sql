CREATE SCHEMA "harvesting";

CREATE SCHEMA "auth";

CREATE SCHEMA "core";

CREATE TABLE "harvesting"."oai_sets" (
  "id" varchar PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now()),
  "is_active" boolean NOT NULL DEFAULT true
);

CREATE TABLE "harvesting"."oai_records" (
  "id" varchar PRIMARY KEY,
  "url" varchar UNIQUE NOT NULL,
  "title" varchar NOT NULL,
  "creator" varchar NOT NULL,
  "subject" varchar NOT NULL,
  "description" text NOT NULL,
  "publisher" varchar NOT NULL,
  "contributor" varchar NOT NULL,
  "inferred_issue_date" date NOT NULL,
  "oai_set_id" varchar NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now()),
  "is_active" boolean NOT NULL DEFAULT true
);

CREATE TABLE "auth"."users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "first_name" varchar NOT NULL,
  "last_name" varchar NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "password" varchar NOT NULL,
  "is_root" boolean NOT NULL DEFAULT false,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now()),
  "is_active" boolean NOT NULL DEFAULT true
);

CREATE TABLE "auth"."users_groups" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "group_id" int NOT NULL
);

CREATE TABLE "auth"."groups" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "is_root" boolean NOT NULL DEFAULT false,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now()),
  "is_active" boolean NOT NULL DEFAULT true
);

CREATE TABLE "auth"."groups_permissions" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "group_id" int NOT NULL,
  "permission_id" int NOT NULL
);

CREATE TABLE "auth"."permissions" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "webapp_related_path" varchar UNIQUE NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now()),
  "is_active" boolean NOT NULL DEFAULT true
);

CREATE TABLE "core"."sysparams" (
  "key" varchar PRIMARY KEY,
  "value" varchar NOT NULL
);

CREATE UNIQUE INDEX ON "auth"."users_groups" ("user_id", "group_id");

CREATE UNIQUE INDEX ON "auth"."groups_permissions" ("group_id", "permission_id");

ALTER TABLE "harvesting"."oai_records" ADD FOREIGN KEY ("oai_set_id") REFERENCES "harvesting"."oai_sets" ("id");

ALTER TABLE "auth"."users_groups" ADD FOREIGN KEY ("user_id") REFERENCES "auth"."users" ("id");

ALTER TABLE "auth"."users_groups" ADD FOREIGN KEY ("group_id") REFERENCES "auth"."groups" ("id");

ALTER TABLE "auth"."groups_permissions" ADD FOREIGN KEY ("group_id") REFERENCES "auth"."groups" ("id");

ALTER TABLE "auth"."groups_permissions" ADD FOREIGN KEY ("permission_id") REFERENCES "auth"."permissions" ("id");


-- # SPECIFIC CONSTRAINTS NON GENERATED BY DB-DIAGRAM
-- ## Restric the creation of other than one root user.
CREATE UNIQUE INDEX ON "auth"."users" (is_root) WHERE is_root = TRUE;
-- ## Restric the creation of other than one root group.
CREATE UNIQUE INDEX ON "auth"."groups" (is_root) WHERE is_root = TRUE;

